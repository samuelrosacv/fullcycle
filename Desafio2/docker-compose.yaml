version: '3'

services: 
    app:
      build:
        context: ./node
      container_name: app
      restart: unless-stopped
      #entrypoint: dockerize -wait tcp://db:3306 -timeout 20s docker-entrypoint.sh
      networks:    
        - my-network-node
      volumes:
        - ./node:/usr/src/app
        - node_modules:/usr/src/app/node_modules
      tty: true 
      ports: 
        - "80"
      depends_on: 
        - db 
      command: node index.js     

    db:
      image: mysql:5.7
      command: --innodb-use-native-aio=0
      container_name: db
      restart: always
      tty: true
      volumes: 
        - ./mysql:/var/lib/mysql
      environment:
        - MYSQL_DATABASE=nodedb
        - MYSQL_ROOT_USER=root
        - MYSQL_ROOT_PASSWORD=root
      networks: 
        - my-network-node
      ports: 
        - "3306:3306"
       
    nginx:
      image: samuelrosacv/nginx:prod
      build: 
        context:  ./nginx
        dockerfile: Dockerfile.prod  
      container_name: nginx
      ports: 
        - "8080:80"
      volumes:
          - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      restart: always 
      depends_on:
        - app 
      networks: 
        - my-network-node       
     
networks: 
  my-network-node:
    driver: bridge

volumes:
   node_modules:        